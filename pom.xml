<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.6.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>org.fouda</groupId>
    <artifactId>integration-test-sample</artifactId>
    <version>1.0.0</version>
    <name>Integration test sample project</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>10</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.tomakehurst</groupId>
            <artifactId>wiremock</artifactId>
            <version>1.58</version>
            <scope>test</scope>
        </dependency>
        <!--
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
        -->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId> <!-- Always see mvn help:describe for more info -->
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.1</version> <!-- tested against JDK 10 -->
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal> <!-- Mandatory goal to prepare jacoco agent -->
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>prepare-package</phase> <!-- Generate testing report while creating the artifact jar -->
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check
                            </goal><!-- Checks that the code coverage metrics are being met at maven verifiy phase -->
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit> <!-- an overall instruction coverage of 80% and no class must be missed -->
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.20</minimum><!-- Testing purposes -->
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <!-- See the order of plugin to ensure that goals from different plugin will be executed in the order of plugins order in pom.xml -->
            <!-- Docker plugins-->
            <!-- For integration testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>integration-test</goal> <!--Run integration tests using Surefire.-->
                            <goal>verify</goal><!-- verifies that the integration tests of an application passed. -->
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- First (Open/ later Close) database and messaging containers for integration testing-->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.25.2</version>
                <configuration>
                    <dockerHost>unix:///var/run/docker.sock</dockerHost>
                    <verbose>true</verbose>
                    <images>
                        <image>
                            <name>rabbitmq:management</name>
                            <alias>rabbitmq</alias>
                            <run>
                                <ports>
                                    <port>5672:5672</port>
                                    <port>15672:15672</port>
                                </ports>
                            </run>
                        </image>
                        <image>
                            <name>postgres</name>
                            <alias>postgres</alias>
                            <run>
                                <ports>
                                    <port>5432:5432</port>
                                </ports>
                                <env>
                                    <POSTGRES_USER>test</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>123456</POSTGRES_PASSWORD>
                                    <POSTGRES_DB>users</POSTGRES_DB>
                                </env>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal><!-- kill container after finishing integration tests -->
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <!-- Then sleep time for docker containers to be init -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>sleep-for-a-while</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <target>
                                <sleep seconds="6" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Flyway DB propagation - this plugin allows the migrate goal to be executed manually & before running integration tests -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>4.0.3</version>
                <executions>
                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>migrate</goal>
                            <goal>info</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <user>test</user>
                    <password>123456</password>
                    <url>jdbc:postgresql://localhost:5432/users</url>

                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
